// Generated by CoffeeScript 1.10.0

/* Game.coffee */

(function() {
  var Game, Player;

  Player = require('./Player');

  Game = (function() {
    function Game() {
      this.players = {};
      this.gameSize = 2000;
    }

    Game.prototype.addPlayer = function(fingerprint, remote, username, x, y) {
      return this.players[fingerprint] = new Player(this, fingerprint, remote, username, x, y);
    };

    Game.prototype.removePlayer = function(fingerprint) {
      return delete this.players[fingerprint];
    };

    Game.prototype.usernameExists = function(username) {
      var player;
      return username === (function() {
        var i, len, ref, results;
        ref = this.players;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          player = ref[i];
          results.push(player.username);
        }
        return results;
      }).call(this);
    };

    Game.prototype.generateXY = function() {
      var player, randx, randy, ref, ref1;
      while (true) {
        randx = this.gameSize * (2 * Math.random() - 1);
        if ((ref = randx / 10) === (function() {
          var i, len, ref1, results;
          ref1 = this.players;
          results = [];
          for (i = 0, len = ref1.length; i < len; i++) {
            player = ref1[i];
            results.push(player.x / 10);
          }
          return results;
        }).call(this)) {
          continue;
        }
        randy = this.gameSize * (2 * Math.random() - 1);
        if ((ref1 = randy / 10) !== (function() {
          var i, len, ref2, results;
          ref2 = this.players;
          results = [];
          for (i = 0, len = ref2.length; i < len; i++) {
            player = ref2[i];
            results.push(player.y / 10);
          }
          return results;
        }).call(this)) {
          break;
        }
      }
      return [randx, randy];
    };

    return Game;

  })();

  module.exports = new Game;

}).call(this);
